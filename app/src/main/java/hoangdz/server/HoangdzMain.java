/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hoangdz.server;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

public class HoangdzMain {

    final int port = 14445;
    ServerSocket HoangRunPort = null;
    final int LimitPlayer = 2;
    ArrayList<PlayerService> PlayerList = new ArrayList<>(); // Lýu danh sách ngý?i chõi k?t n?i t?i server

    public HoangdzMain() {
        try {
            HoangRunPort = new ServerSocket(port); // kh?i t?o và l?ng nghe port
            System.out.println("Server Start on port :" + port);
            PlayerListen();
        } catch (Exception e) {
            System.out.println("Shutdown Server Error");
        }
    }

    public void PlayerListen() throws Exception {
        while (true) {
            Socket ClientSocket = HoangRunPort.accept(); // ch?p nh?n m?t ð?i ðý?c socket ðý?c k?t n?i t?i
            if (LimitPlayer > PlayerList.size()) { // gi?i h?n client 
                char symbol = (PlayerList.size() == 0) ? 'X' : 'O'; // kí t? x o 
                PlayerService Player = new PlayerService(ClientSocket, symbol); // kh?i t?o 1 player v?i socket
                PlayerList.add(Player); // lýu tr? ngý?i chõi
                System.out.println("Have " + PlayerList.size() + "players to connect :");
                System.out.println("To connect : " + ClientSocket.getRemoteSocketAddress());

                if (PlayerList.size() == 2) {
                    PlayerService pl1 = PlayerList.get(0);
                    PlayerService pl2 = PlayerList.get(1);
//
                    Thread t1 = new Thread(new PlayerHandler(pl1, pl2, true));
                    Thread t2 = new Thread(new PlayerHandler(pl2, pl1, false));
                    t1.start();
                    t2.start();
                }
                // s? l? evenent s? ki?n game
//                new Thread(()-> {
//                    
//                });
            } else {
                System.out.println("Have " + PlayerList.size() + "players to connect :");
                System.out.println("To connect : " + ClientSocket.getRemoteSocketAddress());
                System.out.println("Server ð? ð?y");

            }
        }
    }

    public static void main(String[] args) throws IOException, Exception {
        new HoangdzMain();
    }
}

//Method	? ngh?a
